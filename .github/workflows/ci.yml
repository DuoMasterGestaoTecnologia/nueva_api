name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests with coverage
      run: |
        dotnet test \
          --no-build \
          --configuration Release \
          --collect:"XPlat Code Coverage" \
          --results-directory ./coverage \
          --settings ./OmniSuite.Tests/coverlet.runsettings \
          --logger trx \
          --logger "console;verbosity=detailed"
          
    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
      
    - name: Generate coverage report
      run: |
        reportgenerator \
          -reports:"./coverage/**/coverage.opencover.xml" \
          -targetdir:"./coverage/report" \
          -reporttypes:"Html;HtmlSummary" \
          -assemblyfilters:"-*.Tests*" \
          -classfilters:"-*.Program;-*.Startup;-*.Migrations.*"
          
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/**/coverage.opencover.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coverage/report/
        retention-days: 30

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Publish API
      run: |
        dotnet publish ./OmniSuite.API/OmniSuite.API.csproj \
          --configuration Release \
          --output ./publish \
          --no-restore
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-build
        path: ./publish/
        retention-days: 7
